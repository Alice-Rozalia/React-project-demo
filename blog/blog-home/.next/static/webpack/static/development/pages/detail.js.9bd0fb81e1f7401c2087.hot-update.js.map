{"version":3,"file":"static/webpack/static\\development\\pages\\detail.js.9bd0fb81e1f7401c2087.hot-update.js","sources":["webpack:///./pages/detail.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Head from 'next/head'\r\nimport Header from '../components/Header'\r\nimport { Row, Col, Icon, Breadcrumb, Affix, message, Tag } from 'antd'\r\nimport Author from '../components/Author'\r\nimport Advert from '../components/Advert'\r\nimport Footer from '../components/Footer'\r\nimport marked from 'marked'\r\nimport hljs from \"highlight.js\"\r\nimport axios from 'axios'\r\nimport 'highlight.js/styles/monokai-sublime.css'\r\nimport '../static/styles/pages/detailed.css'\r\nimport Tocify from '../components/tocify.tsx'\r\nimport request from '../config/api'\r\n\r\nconst Detail = (props) => {\r\n  const [data, setData] = useState(props.article)\r\n\r\n  const tocify = new Tocify()\r\n  const renderer = new marked.Renderer()\r\n\r\n  renderer.heading = function (text, level, raw) {\r\n    const anchor = tocify.add(text, level)\r\n    return `<a id=\"${anchor}\" href=\"#${anchor}\" class=\"anchor-fix\"><h${level}>${text}</h${level}></a>\\n`\r\n  }\r\n\r\n  marked.setOptions({\r\n    renderer: renderer,\r\n    gfm: true,          // // github样式\r\n    pedantic: false,    // 不容错\r\n    sanitize: false,    // 忽略html标签\r\n    tables: true,       // github表格样式\r\n    breaks: false,\r\n    smartLists: true,   // 列表样式\r\n    smartypants: false,\r\n    highlight: function (code) {\r\n      return hljs.highlightAuto(code).value\r\n    }\r\n  })\r\n\r\n  let html = marked(data.content)\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"UTF-8\"/>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n        <title>白鸟亦悲否？</title>\r\n      </Head>\r\n      <Header/>\r\n      <Row className=\"comm-main\" type=\"flex\" justify=\"center\">\r\n        <Col className=\"comm-left\" xs={24} sm={24} md={16} lg={18} xl={14}>\r\n          <div>\r\n            <div className=\"bread-div\">\r\n              <Breadcrumb>\r\n                <Breadcrumb.Item><a href=\"/\">首页</a></Breadcrumb.Item>\r\n                <Breadcrumb.Item><a href=\"/list\">文章列表</a></Breadcrumb.Item>\r\n                <Breadcrumb.Item>{data.title}</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"detailed-title\">{data.title}</div>\r\n\r\n              <div className=\"list-icon center\">\r\n                <span><Icon type=\"calendar\"/> {data.createTime}</span>\r\n                <Icon type=\"tags\"/>\r\n                {data.tags.map(item => (<Tag key={item.id} color={item.color}>{item.name}</Tag>))}\r\n                <span><Icon type=\"fire\"/> {data.view}人</span>\r\n              </div>\r\n\r\n              <div className=\"detailed-content\" dangerouslySetInnerHTML={{ __html: html }}></div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"comm-right\" xs={0} sm={0} md={7} lg={5} xl={4}>\r\n          <Author/>\r\n          <Advert/>\r\n          <Affix offsetTop={5}>\r\n            <div className=\"detailed-nav comm-box\">\r\n              <div className=\"nav-title\">文章目录</div>\r\n              <div className=\"toc-list\">\r\n                {tocify && tocify.render()}\r\n              </div>\r\n            </div>\r\n          </Affix>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nDetail.getInitialProps = async (context) => {\r\n  let id = context.query.id\r\n\r\n  const promise = new Promise(resolve => {\r\n    axios(request.fetchArticleByIdApi + id).then(res => {\r\n      if (!res.data.success) {\r\n        return message.error(res.data.message)\r\n      }\r\n      resolve(res.data.data)\r\n    })\r\n  })\r\n  return await promise\r\n}\r\n\r\nexport default Detail\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AAcaA;;;;A","sourceRoot":""}