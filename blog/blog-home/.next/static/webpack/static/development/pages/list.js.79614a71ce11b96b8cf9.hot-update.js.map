{"version":3,"file":"static/webpack/static\\development\\pages\\list.js.79614a71ce11b96b8cf9.hot-update.js","sources":["webpack:///./pages/list.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\nimport Header from '../components/Header'\r\nimport { Row, Col, List, Icon, Tag } from 'antd'\r\nimport Author from '../components/Author'\r\nimport Advert from '../components/Advert'\r\nimport Footer from '../components/Footer'\r\nimport MyTag from '../components/Tag'\r\nimport axios from 'axios'\r\nimport request from '../config/api'\r\nimport marked from 'marked'\r\nimport hljs from \"highlight.js\"\r\nimport '../static/styles/pages/index.css'\r\nimport 'highlight.js/styles/monokai-sublime.css'\r\n\r\nconst Home = (list) => {\r\n  const [articleList, setArticleList] = useState(list.data.articles)\r\n  useEffect(() => {\r\n    setArticleList(list.data.articles)\r\n  })\r\n\r\n  const renderer = new marked.Renderer()\r\n  marked.setOptions({\r\n    renderer: renderer,\r\n    gfm: true,          // // github样式\r\n    pedantic: false,    // 不容错\r\n    sanitize: false,    // 忽略html标签\r\n    tables: true,       // github表格样式\r\n    breaks: false,\r\n    smartLists: true,   // 列表样式\r\n    smartypants: false,\r\n    highlight: function (code) {\r\n      return hljs.highlightAuto(code).value\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"UTF-8\"/>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n        <title>文章列表 | 白鸟亦悲否？</title>\r\n        <link rel=\"shortcut icon\" href=\"/favicon.ico\" type=\"image/x-icon\"/>\r\n      </Head>\r\n      <Header/>\r\n      <Row className=\"comm-main\" type=\"flex\" justify=\"center\">\r\n        <Col className=\"comm-left\" xs={24} sm={24} md={16} lg={18} xl={14}>\r\n          <List\r\n            header={<div>最新日志</div>}\r\n            itemLayout=\"vertical\"\r\n            dataSource={articleList}\r\n            renderItem={item => (\r\n              <List.Item>\r\n                <div className=\"list-title\">\r\n                  <Link href={{ pathname: '/detail', query: { id: item.id } }}>\r\n                    <a>{item.title}</a>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"list-icon\">\r\n                  <span><Icon type=\"calendar\"/> {item.createTime}</span>\r\n                  <span><Icon type=\"tags\"/>\r\n                    {item.tags.map(item => (<Tag key={item.id} color={item.color}>{item.name}</Tag>))}\r\n                  </span>\r\n                  <span><Icon type=\"fire\"/> {item.view}人</span>\r\n                </div>\r\n                <div className=\"list-context\" dangerouslySetInnerHTML={{ __html: marked(item.introduce) }}></div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n        <Col className=\"comm-right\" xs={0} sm={0} md={7} lg={5} xl={4}>\r\n          <Author/>\r\n          <MyTag/>\r\n          <Advert/>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nHome.getInitialProps = async (context) => {\r\n  let id = context.query.id\r\n\r\n  const promise = new Promise((resolve) => {\r\n    axios(request.fetchArticleList, { params: { tagId: id } }).then(res => resolve(res.data))\r\n  })\r\n\r\n  return await promise\r\n}\r\n\r\nexport default Home\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AAcdA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}