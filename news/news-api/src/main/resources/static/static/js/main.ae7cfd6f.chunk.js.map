{"version":3,"sources":["assets/images/login.jpg","utils/request.js","api/login.js","pages/login/login.js","components/leftNav/index.js","utils/format.js","components/header/index.js","pages/home/home.js","api/news.js","api/bk.js","pages/news/news.js","pages/admin/admin.js","pages/index/index.js","pages/detail/detail.js","pages/search/search.js","App.js","index.js"],"names":["request","axios","create","baseURL","timeout","headers","Accept","interceptors","use","config","token","window","sessionStorage","getItem","Authorization","error","Promise","reject","response","data","success","message","status","loginApi","url","method","Login","onFinish","value","a","setItem","JSON","stringify","user","props","history","replace","parse","id","to","className","src","logo","alt","name","this","Item","rules","required","min","max","pattern","autoComplete","prefix","UserOutlined","style","color","placeholder","LockOutlined","type","htmlType","Component","LeftNav","path","location","pathname","defaultSelectedKeys","mode","theme","icon","HomeOutlined","FormOutlined","withRouter","dateFormat","time","dt","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","state","currentTime","getTime","inter","setInterval","setState","getTitle","logout","confirm","content","onOk","clear","okText","cancelText","clearInterval","title","username","onClick","Home","myChart","echarts","init","document","querySelector","setOption","tooltip","trigger","axisPointer","grid","left","top","right","bottom","containLabel","xAxis","axisTick","alignWithLabel","axisLabel","fontSize","axisLine","show","yAxis","lineStyle","width","splitLine","series","barWidth","itemStyle","barBorderRadius","addEventListener","resize","myColor","option","inverse","yAxisIndex","params","dataIndex","barCategorGap","label","position","formatter","borderColor","borderWidth","legend","itemWidth","itemHeight","textStyle","radius","center","avoidLabelOverlap","labelLine","roseType","length","length2","fetchNewsApi","query","fetchNewsByBkApi","bid","fetchNewsByIdApi","deleteNewsByIdApi","addNewsApi","updateNewsApi","fetchBksApi","News","news","page","rows","total","statusVisible","bks","updateNews","getNews","items","getBkList","deleteNews","val","ExclamationCircleOutlined","onCancel","info","handleCancel","showAddNews","addNews","showUpdateVisible","pageChange","pageSize","pageSizeChange","current","size","columns","key","render","item","bind","marginRight","extra","PlusOutlined","bordered","rowKey","dataSource","pagination","showQuickJumper","showSizeChanger","pageSizeOptions","showTotal","defaultPageSize","defaultCurrent","onChange","onShowSizeChange","marginTop","visible","footer","map","Option","TextArea","showCount","display","justifyContent","marginLeft","initialValues","source","author","bkId","Footer","Sider","Content","Admin","height","backgroundColor","margin","exact","component","textAlign","Index","getNewsList","index","push","bk","flexWrap","header","marginBottom","xinwens","renderItem","n","i","Detail","getNewsById","match","clickCount","create_time","onBack","Search","SearchPage","searchNews","enterButton","onSearch","allowClear","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ae7cfd6f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login.bd120230.jpg\";","import axios from 'axios'\r\nimport {message} from 'antd';\r\n\r\nconst isPrd = process.env.NODE_ENV === 'production';\r\n\r\nconst request = axios.create({\r\n    // baseURL: process.env.VUE_APP_BASEURL,\r\n    baseURL: isPrd ? '' : 'http://localhost:8360',\r\n    timeout: 5000,\r\n    headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'X-Requested-With': 'XMLHttpRequest'\r\n    }\r\n});\r\n\r\nrequest.interceptors.request.use(config => {\r\n    const token = window.sessionStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = token\r\n    }\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\nrequest.interceptors.response.use(config => {\r\n    if (!config.data.success) {\r\n        message.error(config.data.message || '服务器端异常！')\r\n    }\r\n    return config\r\n}, error => {\r\n    if (error.response.status === 504 || error.response.status === 404) {\r\n        message.error('服务器被吃了( ╯□╰ )！')\r\n    } else if (error.response.status === 403) {\r\n        message.error('权限不足！')\r\n    } else {\r\n        if (error.response.data.message) {\r\n            message.error(error.response.data.message)\r\n        } else {\r\n            message.error('未知错误！')\r\n        }\r\n    }\r\n    return Promise.reject(error)\r\n});\r\n\r\nexport default request","import request from '@/utils/request'\r\n\r\nexport const loginApi = (data => {\r\n    return request({\r\n        url: '/user/login',\r\n        method: 'post',\r\n        data: data\r\n    })\r\n});","import React, {Component} from 'react';\r\nimport {Form, Input, Button, message} from 'antd';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport './login.less'\r\nimport logo from '@/assets/images/login.jpg'\r\n\r\nimport {loginApi} from \"@/api/login\";\r\n\r\nexport default class Login extends Component {\r\n\r\n    onFinish = async value => {\r\n        const {data} = await loginApi(value);\r\n        if (data.success) {\r\n            message.success(\"登录成功！\");\r\n            window.sessionStorage.setItem(\"user_key\", JSON.stringify(data.data.user));\r\n            window.sessionStorage.setItem(\"token\", data.data.token);\r\n            this.props.history.replace(\"/admin\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const user = JSON.parse(window.sessionStorage.getItem(\"user_key\"));\r\n        if (user && user.id) {\r\n            return <Redirect to=\"/admin\" />\r\n        }\r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h1>React期末实训：新闻发布</h1>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>后台登录</h2>\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        onFinish={this.onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '用户名不能为空！'\r\n                                },\r\n                                {\r\n                                    min: 2,\r\n                                    max: 15,\r\n                                    message: '长度在2-15位之间！'\r\n                                },\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                                    message: '用户名只能由数字、字母和下划线组成！'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input autoComplete=\"off\" prefix={<UserOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                   placeholder=\"用户名\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"pwd\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '密码不能为空！'\r\n                                },\r\n                                {\r\n                                    min: 4,\r\n                                    max: 20,\r\n                                    message: '长度在4-20位之间！'\r\n                                },\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                                    message: '密码只能由数字、字母和下划线组成！'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {Menu} from 'antd';\r\nimport {HomeOutlined, FormOutlined,} from '@ant-design/icons';\r\n\r\nimport './index.less';\r\nimport logo from '@/assets/images/login.jpg'\r\n\r\nclass LeftNav extends Component {\r\n    render() {\r\n        // 获取当前请求的路由路径\r\n        const path = this.props.location.pathname;\r\n\r\n        return (\r\n            <div className=\"left-nav\">\r\n                <Link to=\"/admin\" className=\"left-nav-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h1>新闻发布</h1>\r\n                </Link>\r\n                <Menu\r\n                    defaultSelectedKeys={[path]}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    <Menu.Item key=\"/admin/home\" icon={<HomeOutlined/>}>\r\n                        <Link to=\"/admin/home\">首页</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"/admin/news\" icon={<FormOutlined/>}>\r\n                        <Link to=\"/admin/news\">新闻管理</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav);\r\n","export function dateFormat(time) {\r\n    if (!time) return \"\";\r\n\r\n    let dt = new Date(time);\r\n    return dt.getFullYear() + \"年\" + (dt.getMonth() + 1) + \"月\"\r\n        + (dt.getDate() < 10 ? '0' + dt.getDate() : dt.getDate()) + \"日\" + \" \"\r\n        + (dt.getHours() < 10 ? '0' + dt.getHours() : dt.getHours()) + \"时\"\r\n        + (dt.getMinutes() < 10 ? '0' + dt.getMinutes() : dt.getMinutes()) + \"分\"\r\n        + (dt.getSeconds() < 10 ? '0' + dt.getSeconds() : dt.getSeconds()) + \"秒\";\r\n}","import React, {Component} from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Button, Modal} from \"antd\";\r\nimport {dateFormat} from \"@/utils/format\"\r\nimport './index.less';\r\n\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        currentTime: dateFormat(new Date())\r\n    };\r\n\r\n    getTime = () => {\r\n        this.inter = setInterval(() => {\r\n            const time = dateFormat(new Date());\r\n            this.setState({currentTime: time})\r\n        }, 1000)\r\n    };\r\n\r\n    getTitle = () => {\r\n        const path = this.props.location.pathname;\r\n        if (path === \"/admin/home\") {\r\n            return \"首页\"\r\n        } else if (path === \"/admin/news\") {\r\n            return \"新闻管理\"\r\n        }\r\n    };\r\n\r\n    logout = () => {\r\n        Modal.confirm({\r\n            content: \"你确定要退出吗？\",\r\n            onOk: () => {\r\n                window.sessionStorage.clear();\r\n                this.props.history.replace(\"/login\");\r\n            },\r\n            okText: \"退出\",\r\n            cancelText: \"取消\"\r\n        })\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getTime();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.inter);\r\n    }\r\n\r\n    render() {\r\n        const user = JSON.parse(window.sessionStorage.getItem(\"user_key\"));\r\n        const title = this.getTitle();\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎，{user.username}</span>\r\n                    <Button type=\"link\" onClick={this.logout}>退出</Button>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">{this.state.currentTime}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React, {Component} from 'react';\r\nimport \"./home.less\";\r\nimport echarts from \"echarts/lib/echarts\";\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/chart/pie';\r\n\r\nexport default class Home extends Component {\r\n\r\n    componentDidMount() {\r\n        (function () {\r\n            // 1.实例化对象\r\n            let myChart = echarts.init(document.querySelector(\".bar .chart\"));\r\n            // 2.指定配置项和数据\r\n            let option = {\r\n                color: ['#2f89cf'],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: { // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\r\n                    }\r\n                },\r\n                // 修改图表的大小\r\n                grid: {\r\n                    left: '0%',\r\n                    top: '10px',\r\n                    right: '0%',\r\n                    bottom: '4%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [{\r\n                    type: 'category',\r\n                    data: ['旅游行业', '教育培训', '游戏行业', '医疗行业', '电商行业', '社交行业', '金融行业'],\r\n                    axisTick: {\r\n                        alignWithLabel: true\r\n                    },\r\n                    // 修改x轴刻度标签的相关样式\r\n                    axisLabel: {\r\n                        color: \"rgba(255, 255, 255, .6)\",\r\n                        fontSize: \"12\"\r\n                    },\r\n                    // 不显示x坐标轴的线\r\n                    axisLine: {\r\n                        show: false\r\n                    }\r\n                }],\r\n                yAxis: [{\r\n                    type: 'value',\r\n                    // 修改y轴刻度标签的相关样式\r\n                    axisLabel: {\r\n                        color: \"rgba(255, 255, 255, .6)\",\r\n                        // 数字的双引号可加可不加\r\n                        fontSize: 12\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: \"rgba(255, 255, 255, .1)\",\r\n                            width: 2\r\n                        }\r\n                    },\r\n                    // y轴分割线的颜色\r\n                    splitLine: {\r\n                        lineStyle: {\r\n                            color: \"rgba(255, 255, 255, .1)\",\r\n                        }\r\n                    }\r\n                }],\r\n                series: [{\r\n                    name: '直接访问',\r\n                    type: 'bar',\r\n                    barWidth: '35%',\r\n                    data: [200, 300, 300, 900, 1500, 1200, 600],\r\n                    itemStyle: {\r\n                        // 修改柱子的圆角\r\n                        barBorderRadius: 5\r\n                    }\r\n                }]\r\n            };\r\n            // 3.把配置项给实例对象\r\n            myChart.setOption(option);\r\n            // 4.让图表自适应屏幕\r\n            window.addEventListener(\"resize\", function () {\r\n                myChart.resize();\r\n            })\r\n        })();\r\n\r\n        // 柱状图2\r\n        (function() {\r\n            let myColor = [\"#1089e7\", \"#f57474\", \"#56d0e3\", \"#f8b448\", \"#8b78f6\"];\r\n            let myChart = echarts.init(document.querySelector(\".bar2 .chart\"));\r\n            let option = {\r\n                grid: {\r\n                    left: '15%',\r\n                    top: '10%',\r\n                    bottom: '10%',\r\n                    // containLabel: false\r\n                },\r\n                xAxis: {\r\n                    // 不显示x轴相关信息\r\n                    show: false\r\n                },\r\n                yAxis: [{\r\n                    type: 'category',\r\n                    // 是否反向坐标\r\n                    inverse: true,\r\n                    data: ['HTML5', 'CSS3', 'JavaScript', 'Vue', 'Node'],\r\n                    // 不显示y轴线\r\n                    axisLine: {\r\n                        show: false\r\n                    },\r\n                    // 不显示y轴刻度\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        color: \"#fff\"\r\n                    }\r\n                }, {\r\n                    data: ['702', '350', '610', '793', '664'],\r\n                    inverse: true,\r\n                    // 不显示y轴线\r\n                    axisLine: {\r\n                        show: false\r\n                    },\r\n                    // 不显示y轴刻度\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        color: \"#fff\"\r\n                    }\r\n                }],\r\n                series: [{\r\n                    name: '条',\r\n                    type: 'bar',\r\n                    data: [70, 34, 60, 78, 69],\r\n                    yAxisIndex: 0,\r\n                    // 修改第一组柱子的圆角\r\n                    itemStyle: {\r\n                        barBorderRadius: 20,\r\n                        // 此时的color可以修改柱子的颜色\r\n                        color: function(params) {\r\n                            return myColor[params.dataIndex];\r\n                        }\r\n                    },\r\n                    // 修改柱子之间的距离\r\n                    barCategorGap: 50,\r\n                    // 修改柱子的宽度\r\n                    barWidth: 10,\r\n                    // 显示柱子内的文字\r\n                    label: {\r\n                        show: true,\r\n                        position: 'inside',\r\n                        // {c}会自动解析为data内的数据\r\n                        formatter: \"{c}%\"\r\n                    }\r\n                },\r\n                    {\r\n                        name: '框',\r\n                        type: 'bar',\r\n                        barCategorGap: 50,\r\n                        barWidth: 15,\r\n                        yAxisIndex: 1,\r\n                        data: [100, 100, 100, 100, 100],\r\n                        itemStyle: {\r\n                            color: \"none\",\r\n                            borderColor: \"#00c1de\",\r\n                            borderWidth: 3,\r\n                            barBorderRadius: 15\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n            myChart.setOption(option);\r\n            window.addEventListener(\"resize\", function() {\r\n                myChart.resize();\r\n            })\r\n        })();\r\n\r\n        // 饼形图1\r\n        (function() {\r\n            let myChart = echarts.init(document.querySelector(\".pie .chart\"));\r\n            let option = {\r\n                color: [\"#065aab\", \"#066eab\", \"#0682ab\", \"#0696ab\", \"#06a0ab\"],\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n                },\r\n                legend: {\r\n                    // 距离底部10%\r\n                    bottom: \"0%\",\r\n                    // 修改小图标的宽度和高度\r\n                    itemWidth: 10,\r\n                    itemHeight: 10,\r\n                    textStyle: {\r\n                        color: \"rgba(255,255,255,.5)\",\r\n                        fontSize: 12\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: '年龄分布',\r\n                    type: 'pie',\r\n                    // 40%跟60%分别代表内外圆的半径\r\n                    radius: ['40%', '60%'],\r\n                    center: ['50%', '45%'],\r\n                    avoidLabelOverlap: false,\r\n                    // 图形上的文字\r\n                    label: {\r\n                        show: false,\r\n                        position: 'center'\r\n                    },\r\n                    // 链接文字和图形的线\r\n                    labelLine: {\r\n                        show: false\r\n                    },\r\n                    data: [\r\n                        { value: 1, name: '20岁以下' },\r\n                        { value: 4, name: '20-29岁' },\r\n                        { value: 2, name: '30-39岁' },\r\n                        { value: 2, name: '40-49岁' },\r\n                        { value: 1, name: '50岁以上' }\r\n                    ]\r\n                }]\r\n            };\r\n            myChart.setOption(option);\r\n            window.addEventListener(\"resize\", function() {\r\n                myChart.resize();\r\n            })\r\n        })();\r\n\r\n        // 饼形图2\r\n        (function() {\r\n            let myChart = echarts.init(document.querySelector(\".pie2 .chart\"));\r\n            let option = {\r\n                color: ['#006cff', '#60cda0', '#ed8884', '#ff9f7f', '#9fe6b8', '#32c5e9', '#1d9dff'],\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n                },\r\n                legend: {\r\n                    bottom: \"0%\",\r\n                    itemHeight: 10,\r\n                    itemWidth: 10,\r\n                    textStyle: {\r\n                        color: \"rgba(255,255,255,.5)\",\r\n                        fontSize: 12\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: '地区分布',\r\n                    type: 'pie',\r\n                    radius: ['10%', '70%'],\r\n                    center: ['50%', '50%'],\r\n                    roseType: 'radius',\r\n                    // 图形的文字标签\r\n                    label: {\r\n                        fontSize: 10\r\n                    },\r\n                    // 修改链接图形和文字的线的长度\r\n                    labelLine: {\r\n                        // length是链接图形的线条\r\n                        length: 6,\r\n                        // length2是链接文字的线条\r\n                        length2: 8\r\n                    },\r\n                    data: [\r\n                        { value: 20, name: '云南' },\r\n                        { value: 26, name: '北京' },\r\n                        { value: 24, name: '广西' },\r\n                        { value: 25, name: '山东' },\r\n                        { value: 20, name: '江苏' },\r\n                        { value: 25, name: '浙江' },\r\n                        { value: 30, name: '四川' },\r\n                        { value: 42, name: '广东' }\r\n                    ]\r\n                }]\r\n            };\r\n            myChart.setOption(option);\r\n            window.addEventListener(\"resize\", function() {\r\n                myChart.resize();\r\n            })\r\n        })();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"column\">\r\n                    <div className=\"panel bar\">\r\n                        <h2>柱状图-就业行业</h2>\r\n                        <div className=\"chart\"></div>\r\n                        <div className=\"panel-footer\"></div>\r\n                    </div>\r\n                    <div className=\"panel pie\">\r\n                        <h2>饼形图-年龄分布</h2>\r\n                        <div className=\"chart\"></div>\r\n                        <div className=\"panel-footer\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"panel bar2\">\r\n                        <h2>柱状图-技能掌握</h2>\r\n                        <div className=\"chart\"></div>\r\n                        <div className=\"panel-footer\"></div>\r\n                    </div>\r\n                    <div className=\"panel pie2\">\r\n                        <h2>饼形图-地区分布</h2>\r\n                        <div className=\"chart\"></div>\r\n                        <div className=\"panel-footer\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import request from '@/utils/request'\r\n\r\nexport const fetchNewsApi = (query => {\r\n    return request({\r\n        url: '/api/v1/pub/news/list',\r\n        method: 'get',\r\n        params: query\r\n    })\r\n});\r\n\r\nexport const fetchNewsByBkApi = (bid => {\r\n    return request({\r\n        url: '/api/v1/pub/news/bk',\r\n        method: 'get',\r\n        params: {bid: bid}\r\n    })\r\n});\r\n\r\nexport const fetchNewsByIdApi = (id => {\r\n    return request({\r\n        url: '/api/v1/pub/news/detail/' + id,\r\n        method: 'get'\r\n    })\r\n});\r\n\r\nexport const deleteNewsByIdApi = (id => {\r\n    return request({\r\n        url: '/api/v1/pri/news/delete/' + id,\r\n        method: 'delete'\r\n    })\r\n});\r\n\r\nexport const addNewsApi = (data => {\r\n    return request({\r\n        url: '/api/v1/pri/news/add',\r\n        method: 'post',\r\n        data: data\r\n    })\r\n});\r\n\r\nexport const updateNewsApi = (data => {\r\n    return request({\r\n        url: '/api/v1/pri/news/edit',\r\n        method: 'put',\r\n        data: data\r\n    })\r\n});","import request from '@/utils/request'\r\n\r\nexport const fetchBksApi = (bid => {\r\n    return request({\r\n        url: '/api/v1/pub/bk/list',\r\n        method: 'get',\r\n        params: {bid: bid}\r\n    })\r\n});","import React, {Component} from 'react';\r\nimport {Card, Table, Button, Modal, message, Form, Input, Select, Pagination} from \"antd\";\r\nimport {PlusOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {fetchNewsApi, deleteNewsByIdApi, addNewsApi, updateNewsApi} from '@/api/news'\r\nimport {fetchBksApi} from \"@/api/bk\";\r\n\r\nexport default class News extends Component {\r\n\r\n    state = {\r\n        news: [],\r\n        query: {\r\n            page: 1,\r\n            rows: 8\r\n        },\r\n        total: 0,\r\n        statusVisible: 0,\r\n        bks: [],\r\n        updateNews: {}\r\n    };\r\n\r\n    getNews = async params => {\r\n        const {data} = await fetchNewsApi(params || this.state.query);\r\n        if (data.success) {\r\n            this.setState({\r\n                news: data.data.news.items,\r\n                total: data.data.news.total\r\n            });\r\n        }\r\n    };\r\n\r\n    getBkList = async () => {\r\n        const {data} = await fetchBksApi();\r\n        if (data.success) {\r\n            this.setState({\r\n                bks: data.data.bks\r\n            });\r\n        }\r\n    };\r\n\r\n    deleteNews = async val => {\r\n        Modal.confirm({\r\n            title: '你确定要删除如下条新闻吗？',\r\n            icon: <ExclamationCircleOutlined/>,\r\n            content: val.title,\r\n            onOk: async () => {\r\n                const {data} = await deleteNewsByIdApi(val.id)\r\n                if (data.success) {\r\n                    message.success(\"删除成功！\");\r\n                    this.getNews();\r\n                }\r\n            },\r\n            onCancel() {\r\n                message.info(\"删除操作已取消！\");\r\n            },\r\n            cancelText: \"取消\",\r\n            okText: \"删除\"\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            statusVisible: 0\r\n        });\r\n    };\r\n\r\n    showAddNews = () => {\r\n        this.getBkList();\r\n        this.setState({\r\n            statusVisible: 1\r\n        });\r\n    };\r\n\r\n    addNews = async value => {\r\n        const {data} = await addNewsApi(value);\r\n        if (data.success) {\r\n            message.success(\"新闻添加成功！\");\r\n            this.handleCancel();\r\n            this.getNews();\r\n        }\r\n    };\r\n\r\n    showUpdateVisible = news => {\r\n        this.getBkList();\r\n        this.setState({\r\n            statusVisible: 2,\r\n            updateNews: news\r\n        });\r\n    };\r\n\r\n    updateNews = async value => {\r\n        value.id = this.state.updateNews.id;\r\n        const {data} = await updateNewsApi(value);\r\n        if (data.success) {\r\n            message.success(\"新闻修改成功！\");\r\n            this.handleCancel();\r\n            this.getNews();\r\n        }\r\n    };\r\n\r\n    pageChange = (page, pageSize) => {\r\n        this.getNews({page: page, rows: pageSize});\r\n    };\r\n\r\n    pageSizeChange = (current, size) => {\r\n        this.getNews({page: current + 1, rows: size});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getNews();\r\n    };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '新闻标题',\r\n                dataIndex: 'title'\r\n            },\r\n            {\r\n                title: '来源',\r\n                dataIndex: 'source'\r\n            },\r\n            {\r\n                title: '作者',\r\n                dataIndex: 'author'\r\n            },\r\n            {\r\n                title: '浏览',\r\n                dataIndex: 'clickCount'\r\n            },\r\n            {\r\n                title: '板块',\r\n                dataIndex: ['bk', 'name']\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time'\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: 140,\r\n                render: item => (\r\n                    <span>\r\n                        <Button type=\"primary\" size=\"small\" onClick={this.showUpdateVisible.bind(this, item)}\r\n                                style={{marginRight: '8px'}}>修改</Button>\r\n                        <Button type=\"danger\" size=\"small\" onClick={this.deleteNews.bind(this, item)}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n\r\n        const {news, statusVisible, bks, updateNews, total, query} = this.state;\r\n\r\n        return (\r\n            <Card title=\"新闻列表\"\r\n                  extra={<Button type=\"primary\" onClick={this.showAddNews.bind(this)}\r\n                                 icon={<PlusOutlined/>}>添加新闻</Button>}>\r\n                <Table\r\n                    bordered={true}\r\n                    rowKey=\"id\"\r\n                    dataSource={news}\r\n                    columns={columns}\r\n                    pagination={false}\r\n                />\r\n                <Pagination\r\n                    showQuickJumper showSizeChanger\r\n                    pageSizeOptions={[3, 5, 8, 12]}\r\n                    showTotal={total => (\"共\" + total + \"条\")}\r\n                    defaultPageSize={query.rows}\r\n                    defaultCurrent={query.page} total={total}\r\n                    onChange={this.pageChange}\r\n                    onShowSizeChange={this.pageSizeChange}\r\n                    style={{marginTop: 25}}\r\n                />\r\n\r\n                <Modal title=\"添加新闻\" cancelText=\"取消\" okText=\"添加\" width={750} visible={statusVisible === 1}\r\n                       onCancel={this.handleCancel} footer={null}>\r\n                    <Form onFinish={this.addNews}>\r\n                        <Form.Item label=\"标题\" name=\"title\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '标题不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input placeholder=\"请输入新闻标题\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"来源\" name=\"source\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '来源不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input placeholder=\"请输入新闻的来源，如百度网，原创等\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"作者\" name=\"author\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '作者不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input placeholder=\"请输入新闻作者\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"板块\" name=\"bkId\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '板块不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Select placeholder=\"请选择新闻所属的板块\">\r\n                                {\r\n                                    bks.map(item => {\r\n                                        return (\r\n                                            <Select.Option key={item.id} value={item.id}>{item.name}</Select.Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"正文\" name=\"content\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '正文不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={7} showCount={true}/>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Button onClick={this.handleCancel.bind(this)}>取消</Button>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{marginLeft: 30}}>添加</Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                <Modal title=\"修改新闻\" cancelText=\"取消\" okText=\"添加\" width={750} visible={statusVisible === 2}\r\n                       onCancel={this.handleCancel} footer={null}>\r\n                    <Form onFinish={this.updateNews}\r\n                          initialValues={{\r\n                              title: updateNews.title,\r\n                              source: updateNews.source,\r\n                              author: updateNews.author,\r\n                              bkId: updateNews.bkId,\r\n                              content: updateNews.content\r\n                          }}>\r\n                        <Form.Item label=\"标题\" name=\"title\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '标题不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input placeholder=\"请输入新闻标题\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"来源\" name=\"source\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '来源不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input placeholder=\"请输入新闻的来源，如百度网，原创等\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"作者\" name=\"author\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '作者不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input placeholder=\"请输入新闻作者\"/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"板块\" name=\"bkId\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '板块不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Select placeholder=\"请选择新闻所属的板块\">\r\n                                {\r\n                                    bks.map(item => {\r\n                                        return (\r\n                                            <Select.Option key={item.id} value={item.id}>{item.name}</Select.Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"正文\" name=\"content\" rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '正文不能为空！'\r\n                            }\r\n                        ]}>\r\n                            <Input.TextArea rows={7} showCount={true}/>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Button onClick={this.handleCancel.bind(this)}>取消</Button>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{marginLeft: 30}}>修改</Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Layout} from 'antd';\r\n\r\nimport LeftNav from \"@/components/leftNav\";\r\nimport Header from \"@/components/header\";\r\nimport Home from \"../home/home\";\r\nimport News from \"../news/news\";\r\n\r\nconst {Footer, Sider, Content} = Layout;\r\n\r\nexport default class Admin extends Component {\r\n    render() {\r\n        const user = JSON.parse(window.sessionStorage.getItem(\"user_key\"));\r\n        if (!user || !user.id) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n\r\n        return (\r\n            <Layout style={{height: '100%'}}>\r\n                <Sider>\r\n                    <LeftNav/>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header>Header</Header>\r\n                    <Content style={{backgroundColor: '#fff', margin: '20px 20px 0'}}>\r\n                        <Switch>\r\n                            <Route exact={true} path=\"/admin/home\" component={Home}/>\r\n                            <Route exact={true} path=\"/admin/news\" component={News}/>\r\n                            <Redirect to=\"/admin/home\"/>\r\n                        </Switch>\r\n                    </Content>\r\n                    <Footer style={{textAlign: 'center', color: '#ccc'}}>\r\n                        推荐使用谷歌浏览器，可以获得更佳的页面操作！\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {List, Input} from 'antd';\r\nimport \"./index.less\";\r\nimport {fetchBksApi} from \"@/api/bk\";\r\nimport {fetchNewsByBkApi} from '@/api/news'\r\n\r\nclass Index extends Component {\r\n\r\n    state = {\r\n        bks: [],\r\n        news: []\r\n    };\r\n\r\n    getBkList = async () => {\r\n        const {data} = await fetchBksApi();\r\n        if (data.success) {\r\n            this.setState({\r\n                bks: data.data.bks\r\n            });\r\n        }\r\n    };\r\n\r\n    getNewsList = async bid => {\r\n        const {data} = await fetchNewsByBkApi(bid);\r\n        if (data.success) {\r\n            this.setState({\r\n                news: data.data.index\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getBkList();\r\n        this.getNewsList();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"search-container\">\r\n                    <Input placeholder=\"搜索\" onClick={() => this.props.history.push(\"/search\")}/>\r\n                </div>\r\n                <ul className=\"nav\">\r\n                    <li onClick={() => {\r\n                        this.getNewsList()\r\n                    }}>首页\r\n                    </li>\r\n                    {\r\n                        this.state.bks.map(bk => {\r\n                            return (\r\n                                <li onClick={() => {\r\n                                    this.getNewsList(bk.id)\r\n                                }} key={bk.id}>{bk.name}</li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between'}}>\r\n                    {\r\n                        this.state.news.map((item, index) => {\r\n                            return (\r\n                                <List\r\n                                    header={<div>{item.name}</div>}\r\n                                    bordered\r\n                                    key={index + item.name}\r\n                                    style={{width: '490px', marginBottom: 15}}\r\n                                    dataSource={item.xinwens}\r\n                                    renderItem={(n, i) => (\r\n                                        <List.Item key={n.id + n.title}>\r\n                                            <Link to={\"/detail/\" + n.id}>{(i + 1) + \"、\"}{n.title}</Link>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import React, {Component} from 'react';\r\nimport \"./detail.less\"\r\nimport { PageHeader } from 'antd';\r\nimport {fetchNewsByIdApi} from \"@/api/news\";\r\n\r\nclass Detail extends Component {\r\n\r\n    state = {\r\n        news: {}\r\n    };\r\n\r\n    getNewsById = async () => {\r\n        const {data} = await fetchNewsByIdApi(this.props.match.params.id);\r\n        if (data.success) {\r\n            this.setState({\r\n                news: data.data.news\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getNewsById();\r\n    };\r\n\r\n    render() {\r\n        const {title, author, clickCount, source, create_time, content} = this.state.news;\r\n\r\n        return (\r\n            <div className=\"detail-container\">\r\n                <div>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n                        onBack={() => this.props.history.push(\"/\")}\r\n                        title=\"首页\"\r\n                    />\r\n                </div>\r\n                <h1 className=\"title\">{title}</h1>\r\n                <div className=\"menu-tab\">\r\n                    <span>作者：{author}</span>\r\n                    <span>浏览：{clickCount}</span>\r\n                    <span>来源：{source}</span>\r\n                    <span>创建时间：{create_time}</span>\r\n                </div>\r\n                <div>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Detail;","import React, {Component} from 'react';\r\nimport \"./search.less\";\r\nimport {Input, message, PageHeader, List} from \"antd\";\r\nimport {fetchNewsApi} from '@/api/news'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Search} = Input;\r\n\r\nexport default class SearchPage extends Component {\r\n\r\n    state = {\r\n        news: [],\r\n        total: 0\r\n    };\r\n\r\n    searchNews = async value => {\r\n        const {data} = await fetchNewsApi({key: value});\r\n        if (data.success) {\r\n            if (data.data.news.total === 0) {\r\n                return message.info(\"查询结果为0\");\r\n            }\r\n            this.setState({\r\n                news: data.data.news.items,\r\n                total: data.data.news.total\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n                        onBack={() => this.props.history.push(\"/\")}\r\n                        title=\"首页\"\r\n                    />\r\n                </div>\r\n                <div style={{display: 'flex', justifyContent: 'center', marginBottom: 30}}>\r\n                    <div className=\"search-box\">\r\n                        <Search\r\n                            placeholder=\"根据新闻标题搜索\"\r\n                            enterButton=\"搜索\"\r\n                            onSearch={this.searchNews.bind(this)}\r\n                            allowClear={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <List\r\n                        size=\"small\"\r\n                        header={<div>查询到：{this.state.total} 条新闻</div>}\r\n                        bordered\r\n                        dataSource={this.state.news}\r\n                        renderItem={(item, index) => (\r\n                            <List.Item>\r\n                                <Link to={\"/detail/\" + item.id}>{(index + 1) + \"、\"}{item.title}</Link>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/login\";\r\nimport Admin from \"./pages/admin/admin\";\r\nimport Index from \"./pages/index\";\r\nimport Detail from \"./pages/detail/detail\";\r\nimport SearchPage from \"./pages/search/search\";\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                {/*只匹配一个路由*/}\r\n                <Switch>\r\n                    <Route path=\"/login\" component={Login}></Route>\r\n                    <Route path=\"/admin\" component={Admin}></Route>\r\n                    <Route exact={true} path=\"/\" component={Index}></Route>\r\n                    <Route exact={true} path=\"/detail/:id\" component={Detail}></Route>\r\n                    <Route exact={true} path=\"/search\" component={SearchPage}></Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}